version: "3"
services:
  zookeeper:
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -nz localhost 2181"]
  kafka:
    container_name: kafka
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    healthcheck:
      # Better approach: https://github.com/bitnami/bitnami-docker-kafka/issues/68
      # Basically, we are expecting kafka to require max 30 seconds. If itsn't started Producer/Consumer will crash.
      test: exit 0
      start_period: 15s
  producer:
    container_name: producer
    environment:
      - DOCKER_INFLUXDB_INIT_ORG=some_org
      - TOPIC=cpu-ram-monitoring
    build: ./producer/
    depends_on:
      kafka:
        condition: service_healthy
  influxdb:
    container_name: influxdb
    build: ./influxdb/
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpassword
      - DOCKER_INFLUXDB_INIT_ORG=some_org
      - DOCKER_INFLUXDB_INIT_BUCKET=some_bucket
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=some_very_secret_token
  telgraf:
    container_name: telegraf
    image: telegraf:1.21.1-alpine
    ports:
      - "8125:8125"
    environment:
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: some_very_secret_token
      DOCKER_INFLUXDB_INIT_ORG: some_org
      DOCKER_INFLUXDB_INIT_BUCKET: some_bucket
      TOPIC: cpu-ram-monitoring
      CONSUMER_GROUP: telegraf 
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
    depends_on:
      kafka:
        condition: service_healthy
      influxdb:
        condition: service_healthy